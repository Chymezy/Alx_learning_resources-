Loops in C#

Loops are used to execute a block of code repeatedly until a specified condition is met. 
C# supports several types of loops:

    For Loop
    While Loop
    Do-While Loop
    Foreach Loop

1. For Loop
The for loop is used when the number of iterations is known beforehand. 
It consists of three parts: initialization, condition, and increment/decrement.

for(initialization; condition; increment)

2. While Loop
The while loop continues to execute the block of code as long as the specified condition is true.

initialization;
while (condition)
{
    // code
    increment++;
}

3. Do-While Loop
The do-while loop is similar to the while loop, but it executes the block of code at least 
once before checking the condition.

initialization;
do
{
    // code
}while(condition)

4. Foreach Loop
The foreach loop is used to iterate over a collection or an array. 
It simplifies the iteration process as it doesn't require an index variable.

int[] numbers = { 1, 2, 3, 4, 5 };
foreach (int number in numbers)
{
    Console.WriteLine(number);
}

Explanation

    For Loop: Best when the number of iterations is known.
    While Loop: Best when the number of iterations is not known beforehand and depends on a condition.
    Do-While Loop: Similar to while loop but guarantees at least one execution of the loop body.
    Foreach Loop: Best for iterating over collections and arrays.
